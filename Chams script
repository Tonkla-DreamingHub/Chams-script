local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/turtle"))()
local OwO = library:Window("Demon cheats Chams V1")

OwO:Toggle("Chams (MM2)", false, function(bool)
    --[[
    Credits to Kiriot22 for the Role getter <3
        - poorly coded by FeIix <3
]]

-- > Declarations < --

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LP = Players.LocalPlayer
local roles

-- > Functions <--

function CreateHighlight() -- make any new highlights for new players
	for i, v in pairs(Players:GetChildren()) do
		if v ~= LP and v.Character and not v.Character:FindFirstChild("Highlight") then
			Instance.new("Highlight", v.Character)           
		end
	end
end

function UpdateHighlights() -- Get Current Role Colors (messy)
	for _, v in pairs(Players:GetChildren()) do
		if v ~= LP and v.Character and v.Character:FindFirstChild("Highlight") then
			Highlight = v.Character:FindFirstChild("Highlight")
			if v.Name == Sheriff and IsAlive(v) then
				Highlight.FillColor = Color3.fromRGB(0, 0, 225)
			elseif v.Name == Murder and IsAlive(v) then
				Highlight.FillColor = Color3.fromRGB(225, 0, 0)
			elseif v.Name == Hero and IsAlive(v) and not IsAlive(game.Players[Sheriff]) then
				Highlight.FillColor = Color3.fromRGB(255, 250, 0)
			else
				Highlight.FillColor = Color3.fromRGB(0, 225, 0)
			end
		end
	end
end	

function IsAlive(Player) -- Simple sexy function
	for i, v in pairs(roles) do
		if Player.Name == i then
			if not v.Killed and not v.Dead then
				return true
			else
				return false
			end
		end
	end
end


-- > Loops < --

RunService.RenderStepped:connect(function()
	roles = ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()
	for i, v in pairs(roles) do
		if v.Role == "Murderer" then
			Murder = i
		elseif v.Role == 'Sheriff'then
			Sheriff = i
		elseif v.Role == 'Hero'then
			Hero = i
		end
	end
	CreateHighlight()
	UpdateHighlights()
end)
end)
OwO:Toggle("Chams (All Maps)", false, function(bool)
    local Players = game:GetService("Players")

-- ะคัะฝะบัะธั ะพะฑะฝะพะฒะปะตะฝะธั ัะฒะตัะฐ ะฟะพะดัะฒะตัะบะธ
local function UpdateFillColor(Player, Highlighter)
	local DefaultColor = Color3.fromRGB(255, 48, 51)
	Highlighter.FillColor = (Player.TeamColor and Player.TeamColor.Color) or DefaultColor
end

-- ะคัะฝะบัะธั ะพะฑั€ะฐะฑะพัะบะธ ะพัะบะปััะตะฝะธั ะฟะพะดัะฒะตัะบะธ ะธ ัะพะฑััะธะน
local function Disconnect(Highlighter, Connections)
	Highlighter:Remove()
	for _, Connection in ipairs(Connections) do
		Connection:Disconnect()
	end
end

-- ะคัะฝะบัะธั ะฝะฐััั€ะพะนะบะธ ะฟะพะดัะฒะตัะบะธ ะดะปั ะฟะตั€ัะพะฝะฐะถะฐ
local function SetupCharacter(Player, Character)
	print("Setting up character for player:", Player.Name)
	local Humanoid = Character:FindFirstChildOfClass("Humanoid")
	if not Humanoid then
		print("No Humanoid found for character:", Character.Name)
		return
	end

	local Connections = {}
	local Highlighter = Instance.new("Highlight", Character)

	-- ะะฐัะฐะปัะฝะฐั ะฝะฐััั€ะพะนะบะฐ ัะฒะตัะฐ ะฟะพะดัะฒะตัะบะธ
	UpdateFillColor(Player, Highlighter)

	-- ะะฑั€ะฐะฑะพััะธะบ ะธะทะผะตะฝะตะฝะธั ัะฒะตัะฐ ะบะพะผะฐะฝะดั
	table.insert(Connections, Player:GetPropertyChangedSignal("TeamColor"):Connect(function()
		UpdateFillColor(Player, Highlighter)
	end))

	-- ะะฑั€ะฐะฑะพััะธะบ ะธะทะผะตะฝะตะฝะธั ะทะดะพั€ะพะฒัั
	table.insert(Connections, Humanoid:GetPropertyChangedSignal("Health"):Connect(function()
		if Humanoid.Health <= 0 then
			Disconnect(Highlighter, Connections)
		end
	end))

	-- ะัะบะปััะตะฝะธะต ะฟะพะดัะฒะตัะบะธ ะฟั€ะธ ัะดะฐะปะตะฝะธะธ ะฟะตั€ัะพะฝะฐะถะฐ
	Character.AncestryChanged:Connect(function(_, parent)
		if not parent then
			Disconnect(Highlighter, Connections)
		end
	end)
end

-- ะคัะฝะบัะธั ะฟั€ะธะผะตะฝะตะฝะธั ะฟะพะดัะฒะตัะบะธ ะบ ะธะณั€ะพะบั
local function ApplyHighlight(Player)
	-- ะะพะดัะฒะตัะบะฐ ะธะณั€ะพะบะฐ, ะตัะปะธ ั ะฝะตะณะพ ัะถะต ะตััั ะฟะตั€ัะพะฝะฐะถ
	if Player.Character then
		SetupCharacter(Player, Player.Character)
	end

	-- ะะพะดัะฒะตัะบะฐ ะฝะพะฒะพะณะพ ะฟะตั€ัะพะฝะฐะถะฐ, ะบะพะณะดะฐ ะพะฝ ัะพะทะดะฐะตััั
	Player.CharacterAdded:Connect(function(Character)
		SetupCharacter(Player, Character)
	end)
end

-- ะั€ะธะผะตะฝะตะฝะธะต ะฟะพะดัะฒะตัะบะธ ะบะพ ะฒัะตะผ ัััะตััะฒัััะธะผ ะธะณั€ะพะบะฐะผ
for _, Player in ipairs(Players:GetPlayers()) do
	ApplyHighlight(Player)
end

-- ะั€ะธะผะตะฝะตะฝะธะต ะฟะพะดัะฒะตัะบะธ ะบ ะฝะพะฒัะผ ะธะณั€ะพะบะฐะผ
Players.PlayerAdded:Connect(ApplyHighlight)
end)
